/**
 * Property Categories Section Component
 * 
 * Sección que muestra las categorías principales de propiedades disponibles
 * en Andorra con imágenes representativas y descripciones.
 * 
 * VERSIÓN 2.1:
 * - Mejor contraste: Overlay oscuro 70% + text-shadow
 * - Tooltip interactivo con descripción
 * - Soporte móvil: tap para mostrar tooltip, segundo tap para navegar
 * 
 * @component
 * @version 2.1.0
 * @updated 2025-10-27 - Mejoras de UI/UX
 */

'use client';

import { useState } from 'react';
import Image from 'next/image';
import Link from 'next/link';
import { Container } from '@/components/layout/Container';
import { WPTaxonomy } from '@/types';

/**
 * Interface para definir la estructura de cada categoría de propiedad
 */
interface PropertyCategory {
  id: string;
  title: string;
  description: string;
  image: string;
  href: string;
  count?: number;
}

/**
 * Props del componente
 */
interface PropertyCategoriesSectionProps {
  propertyTypes?: WPTaxonomy[];
}

/**
 * Mapeo de imágenes por tipo de propiedad (slug)
 */
const PROPERTY_TYPE_IMAGES: Record<string, string> = {
  'chalet': 'https://images.pexels.com/photos/1370704/pexels-photo-1370704.jpeg?auto=compress&cs=tinysrgb&w=800',
  'chalé': 'https://images.pexels.com/photos/1370704/pexels-photo-1370704.jpeg?auto=compress&cs=tinysrgb&w=800',
  'apartamento': 'https://images.pexels.com/photos/1457842/pexels-photo-1457842.jpeg?auto=compress&cs=tinysrgb&w=800',
  'piso': 'https://images.pexels.com/photos/1457842/pexels-photo-1457842.jpeg?auto=compress&cs=tinysrgb&w=800',
  'casa': 'https://images.pexels.com/photos/1396122/pexels-photo-1396122.jpeg?auto=compress&cs=tinysrgb&w=800',
  'villa': 'https://images.pexels.com/photos/1643389/pexels-photo-1643389.jpeg?auto=compress&cs=tinysrgb&w=800',
  'atico': 'https://images.pexels.com/photos/1643389/pexels-photo-1643389.jpeg?auto=compress&cs=tinysrgb&w=800',
  'ático': 'https://images.pexels.com/photos/1643389/pexels-photo-1643389.jpeg?auto=compress&cs=tinysrgb&w=800',
  'duplex': 'https://images.pexels.com/photos/1643389/pexels-photo-1643389.jpeg?auto=compress&cs=tinysrgb&w=800',
  'dúplex': 'https://images.pexels.com/photos/1643389/pexels-photo-1643389.jpeg?auto=compress&cs=tinysrgb&w=800',
  'estudio': 'https://images.pexels.com/photos/1457842/pexels-photo-1457842.jpeg?auto=compress&cs=tinysrgb&w=800',
  'terreno': 'https://images.pexels.com/photos/2166711/pexels-photo-2166711.jpeg?auto=compress&cs=tinysrgb&w=800',
  'local-comercial': 'https://images.pexels.com/photos/264636/pexels-photo-264636.jpeg?auto=compress&cs=tinysrgb&w=800',
  'local': 'https://images.pexels.com/photos/264636/pexels-photo-264636.jpeg?auto=compress&cs=tinysrgb&w=800',
  'oficina': 'https://images.pexels.com/photos/380769/pexels-photo-380769.jpeg?auto=compress&cs=tinysrgb&w=800',
  'nave-industrial': 'https://images.pexels.com/photos/1438072/pexels-photo-1438072.jpeg?auto=compress&cs=tinysrgb&w=800',
  'edificio': 'https://images.pexels.com/photos/323705/pexels-photo-323705.jpeg?auto=compress&cs=tinysrgb&w=800',
  'hotel': 'https://images.pexels.com/photos/258154/pexels-photo-258154.jpeg?auto=compress&cs=tinysrgb&w=800',
  'default': 'https://images.pexels.com/photos/1643383/pexels-photo-1643383.jpeg?auto=compress&cs=tinysrgb&w=800',
};

function getImageForPropertyType(slug: string): string {
  const normalizedSlug = slug.toLowerCase().normalize('NFD').replace(/[\u0300-\u036f]/g, '');
  return PROPERTY_TYPE_IMAGES[slug.toLowerCase()] 
    || PROPERTY_TYPE_IMAGES[normalizedSlug] 
    || PROPERTY_TYPE_IMAGES['default'];
}

function stripHTML(html: string): string {
  if (!html) return '';
  let text = html.replace(/<[^>]*>/g, '');
  text = text
    .replace(/&nbsp;/g, ' ')
    .replace(/&amp;/g, '&')
    .replace(/&lt;/g, '<')
    .replace(/&gt;/g, '>')
    .replace(/&quot;/g, '"')
    .replace(/&#039;/g, "'");
  text = text.replace(/\s+/g, ' ').trim();
  return text;
}

function truncateText(text: string, maxLength: number = 200): string {
  if (!text || text.length <= maxLength) return text;
  const truncated = text.substring(0, maxLength);
  const lastSpace = truncated.lastIndexOf(' ');
  return (lastSpace > 0 ? truncated.substring(0, lastSpace) : truncated) + '...';
}

/**
 * Componente individual de categoría con tooltip
 */
function CategoryCard({ category, isHero = false }: { category: PropertyCategory; isHero?: boolean }) {
  const [showTooltip, setShowTooltip] = useState(false);

  const handleClick = (e: React.MouseEvent<HTMLAnchorElement>) => {
    const isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;
    
    if (isTouchDevice && !showTooltip) {
      e.preventDefault();
      setShowTooltip(true);
      setTimeout(() => setShowTooltip(false), 5000);
    }
  };

  return (
    <Link
      href={category.href}
      onClick={handleClick}
      onMouseEnter={() => setShowTooltip(true)}
      onMouseLeave={() => setShowTooltip(false)}
      className={`group relative overflow-hidden rounded-2xl block ${
        isHero ? 'aspect-[4/5] h-full' : 'aspect-[4/5]'
      }`}
    >
      <div className="absolute inset-0">
        <Image
          src={category.image}
          alt={category.title}
          fill
          className="object-cover group-hover:scale-110 group-hover:brightness-110 transition-all duration-700"
          sizes="(max-width: 768px) 50vw, (max-width: 1024px) 33vw, 20vw"
        />
        <div className="absolute inset-0 bg-gradient-to-t from-black/80 via-black/50 to-black/30" />
      </div>

      <div className="relative h-full flex flex-col justify-end p-6">
        <h3 className={`text-white font-light tracking-tight mb-2 leading-tight ${
          isHero ? 'text-2xl md:text-3xl lg:text-4xl' : 'text-lg md:text-xl'
        }`} style={{ textShadow: '0 2px 8px rgba(0,0,0,0.6)' }}>
          {category.title}
          {category.count !== undefined && category.count > 0 && (
            <span className="ml-2 text-sm text-white/90">({category.count})</span>
          )}
        </h3>

        <div className="flex items-center gap-2 text-white/90 text-sm font-light opacity-0 group-hover:opacity-100 transition-opacity duration-300" style={{ textShadow: '0 2px 4px rgba(0,0,0,0.5)' }}>
          <span>Ver propiedades</span>
          <svg className="w-4 h-4 group-hover:translate-x-1 transition-transform duration-300" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={1.5} d="M17 8l4 4m0 0l-4 4m4-4H3" />
          </svg>
        </div>
      </div>

      {showTooltip && category.description && (
        <div className="absolute inset-x-0 bottom-0 bg-black/95 backdrop-blur-sm p-4 transform transition-all duration-300 ease-out">
          <p className="text-white/90 text-sm font-light leading-relaxed" style={{ textShadow: '0 1px 2px rgba(0,0,0,0.5)' }}>
            {category.description}
          </p>
          <p className="text-white/60 text-xs mt-2 md:hidden" style={{ textShadow: '0 1px 2px rgba(0,0,0,0.5)' }}>
            Toca de nuevo para ver propiedades
          </p>
        </div>
      )}
    </Link>
  );
}

const propertyCategories: PropertyCategory[] = [
  {
    id: 'chalets',
    title: 'Chalets',
    description: 'Descubre nuestra selección de chalés de lujo en Andorra',
    image: 'https://images.pexels.com/photos/1370704/pexels-photo-1370704.jpeg?auto=compress&cs=tinysrgb&w=800',
    href: '/propiedades?tipo=chalet',
  },
  {
    id: 'apartamentos-pisos',
    title: 'Apartamentos / Pisos',
    description: 'Pisos y apartamentos en el centro de las parroquias',
    image: 'https://images.pexels.com/photos/1457842/pexels-photo-1457842.jpeg?auto=compress&cs=tinysrgb&w=800',
    href: '/propiedades?tipo=apartamento',
  },
  {
    id: 'casas-adosadas',
    title: 'Casas Adosadas',
    description: 'Unifamiliares con vistas espectaculares',
    image: 'https://images.pexels.com/photos/1396122/pexels-photo-1396122.jpeg?auto=compress&cs=tinysrgb&w=800',
    href: '/propiedades?tipo=casa',
  },
];

export function PropertyCategoriesSection({ propertyTypes = [] }: PropertyCategoriesSectionProps) {
  const categories: PropertyCategory[] = propertyTypes.length > 0
    ? propertyTypes
        .filter(type => type.count && type.count > 0)
        .map(type => {
          const cleanDescription = type.description 
            ? truncateText(stripHTML(type.description))
            : `Propiedades de tipo ${type.name} en Andorra`;
          
          return {
            id: type.slug,
            title: type.name,
            description: cleanDescription,
            image: getImageForPropertyType(type.slug),
            href: `/propiedades?tipo=${type.slug}`,
            count: type.count,
          };
        })
    : propertyCategories.slice(0, 3);
  
  return (
    <section className="py-32 bg-white">
      <Container>
        <div className="text-center mb-20">
          <h2 className="text-4xl md:text-5xl font-light tracking-tight mb-6">
            Propiedades en venta
          </h2>
          <p className="text-gray-600 text-lg max-w-3xl mx-auto font-light">
            Propiedades de venta en Andorra con la mejor rentabilidad como inversión en uno de los marcos tributarios más competitivos de Europa.
          </p>
        </div>

        {/* Grid responsivo con primera card destacada */}
        <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-6 auto-rows-fr">
          {categories.map((category, index) => {
            if (index === 0) {
              // Primera card: 2 columnas de ancho, 2 filas de alto
              return (
                <div
                  key={category.id}
                  className="col-span-2 row-span-2"
                >
                  <CategoryCard category={category} isHero={true} />
                </div>
              );
            }
            
            // Resto de cards normales
            return (
              <div key={category.id}>
                <CategoryCard category={category} isHero={false} />
              </div>
            );
          })}
        </div>
      </Container>
    </section>
  );
}
